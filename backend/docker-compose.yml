services:
  app:
    env_file:
      - .env
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "3001:3000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    depends_on:
      - postgres
      - chatgpt  # << novo
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network

  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - ./create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  chatgpt:  # << novo serviÃ§o Python
    build: ./chat-gpt-api
    container_name: python-chatgpt-api
    ports:
      - "8000:8000"
    env_file:
      - ./chat-gpt-api/.env
    volumes:
      - ./chat-gpt-api:/app
      - ./chat-gpt-api/arquivos:/app/arquivos
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
